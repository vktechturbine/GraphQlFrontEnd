{"ast":null,"code":"import _objectSpread from \"/home/vishal/Documents/Backend/GraphQlFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/vishal/Documents/Backend/GraphQlFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/vishal/Documents/Backend/GraphQlFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vishal/Documents/Backend/GraphQlFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vishal/Documents/Backend/GraphQlFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vishal/Documents/Backend/GraphQlFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vishal/Documents/Backend/GraphQlFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/vishal/Documents/Backend/GraphQlFrontEnd/src/pages/Feed/Feed.js\";\nimport React, { Component, Fragment } from 'react';\n// import {io}  from 'socket.io-client';\nimport Post from '../../components/Feed/Post/Post';\nimport Button from '../../components/Button/Button';\nimport FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\nimport Input from '../../components/Form/Input/Input';\nimport Paginator from '../../components/Paginator/Paginator';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Feed.css';\nvar Feed = /*#__PURE__*/function (_Component) {\n  _inherits(Feed, _Component);\n  function Feed() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, Feed);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Feed)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isEditing: false,\n      posts: [],\n      totalPosts: 0,\n      editPost: null,\n      status: '',\n      postPage: 1,\n      postsLoading: true,\n      editLoading: false\n    };\n    _this.addPost = function (post) {\n      _this.setState(function (prevState) {\n        var updatedPosts = _toConsumableArray(prevState.posts);\n        if (prevState.postPage === 1) {\n          if (prevState.posts.length >= 2) {\n            updatedPosts.pop();\n          }\n          updatedPosts.unshift(post);\n        }\n        return {\n          posts: updatedPosts,\n          totalPosts: prevState.totalPosts + 1\n        };\n      });\n    };\n    _this.updatedPost = function (post) {\n      _this.setState(function (prevState) {\n        var updatedPosts = _toConsumableArray(prevState.posts);\n        var updatedPostIndex = updatedPosts.findIndex(function (p) {\n          return p._id === post._id;\n        });\n        if (updatedPostIndex > -1) {\n          updatedPosts[updatedPostIndex] = post;\n        }\n        return {\n          posts: updatedPosts\n        };\n      });\n    };\n    _this.loadPosts = function (direction) {\n      if (direction) {\n        _this.setState({\n          postsLoading: true,\n          posts: []\n        });\n      }\n      var page = _this.state.postPage;\n      if (direction === 'next') {\n        page++;\n        _this.setState({\n          postPage: page\n        });\n      }\n      if (direction === 'previous') {\n        page--;\n        _this.setState({\n          postPage: page\n        });\n      }\n      var graphqlQurey = {\n        query: \"\\n     query FetchPosts($page:Int!){\\n      posts(page:$page){\\n        posts {\\n          _id\\n          title\\n          content\\n          imageUrl\\n          creator {\\n            name\\n          }\\n          createdAt\\n        }\\n        totalPost\\n      }\\n     }\\n    \",\n        variables: {\n          page: page\n        }\n      };\n      fetch('http://localhost:3002/graphql', {\n        method: 'POST',\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphqlQurey)\n      }).then(function (res) {\n        /*  if (res.status !== 200) {\n           throw new Error('Failed to fetch posts.');\n         } */\n        return res.json();\n      }).then(function (resData) {\n        console.log(resData);\n        if (resData.errrs) {\n          throw new Error(\"Fetching Post failed\");\n        }\n        _this.setState({\n          posts: resData.data.posts.posts.map(function (post) {\n            return _objectSpread({}, post, {\n              imagePath: post.imageUrl\n            });\n          }),\n          totalPosts: resData.data.posts.totalPost,\n          postsLoading: false\n        });\n      }).catch(_this.catchError);\n      console.log(_this.state);\n    };\n    _this.statusUpdateHandler = function (event) {\n      event.preventDefault();\n      var grapQlQuery = {\n        query: \"\\n      mutation{\\n        updateStatus(status:\\\"\".concat(_this.state.status, \"\\\"){\\n          status\\n        }\\n      }\\n      \")\n      };\n      fetch('http://localhost:3002/graphql', {\n        method: 'POST',\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(grapQlQuery)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resData) {\n        if (!resData) {\n          throw new Error(\"Status Update Failed\");\n        }\n        console.log(resData);\n      }).catch(_this.catchError);\n    };\n    _this.newPostHandler = function () {\n      _this.setState({\n        isEditing: true\n      });\n    };\n    _this.startEditPostHandler = function (postId) {\n      _this.setState(function (prevState) {\n        var loadedPost = _objectSpread({}, prevState.posts.find(function (p) {\n          return p._id === postId;\n        }));\n        return {\n          isEditing: true,\n          editPost: loadedPost\n        };\n      });\n    };\n    _this.cancelEditHandler = function () {\n      _this.setState({\n        isEditing: false,\n        editPost: null\n      });\n    };\n    _this.finishEditHandler = function (postData) {\n      _this.setState({\n        editLoading: true\n      });\n      // Set up data (with image!)\n      var formData = new FormData();\n      /*  formData.append('title',postData.title);\n       formData.append('content',postData.content); */\n      formData.append('image', postData.image);\n      // console.log(formData.get('image'));\n      if (_this.state.editPost) {\n        console.log(_this.state.editPost);\n        formData.append('oldPath', _this.state.editPost.imagePath);\n      }\n      fetch('http://localhost:3002/post-image', {\n        method: 'POST',\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token\n        },\n        body: formData\n      }).then(function (res) {\n        return res.json();\n      }).then(function (fetchResData) {\n        console.log(fetchResData);\n        var imageUrl = fetchResData.filePath;\n        console.log(imageUrl);\n        var grapQlQuery = {\n          query: \"\\n          mutation{\\n            createPost(postInput:{title:\\\"\".concat(postData.title, \"\\\",content:\\\"\").concat(postData.content, \"\\\",imageUrl:\\\"\").concat(imageUrl, \"\\\"}){\\n              _id\\n              title\\n              content\\n              imageUrl\\n              creator{\\n                name\\n              }\\n              createdAt\\n            }\\n          }\\n        \")\n        };\n        if (_this.state.editPost) {\n          console.log(_this.state.editPost._id);\n          grapQlQuery = {\n            query: \"\\n          mutation{\\n              updatePost(id:\\\"\".concat(_this.state.editPost._id, \"\\\",postInput:{title:\\\"\").concat(postData.title, \"\\\",content:\\\"\").concat(postData.content, \"\\\",imageUrl:\\\"\").concat(imageUrl, \"\\\"}){\\n                _id\\n                title\\n                content\\n                imageUrl\\n                creator{\\n                  name\\n                }\\n                createdAt\\n              }\\n            }\\n          \\n          \")\n          };\n        }\n        return fetch('http://localhost:3002/graphql', {\n          method: 'POST',\n          headers: {\n            Authorization: 'Bearer ' + _this.props.token,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(grapQlQuery)\n        });\n      }).then(function (res) {\n        /* if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Creating or editing a post failed!');\n        } */\n\n        return res.json();\n      }).then(function (resData) {\n        console.log(resData);\n        if (resData.errors && resData.errors[0] === 422) {\n          throw new Error(\"Invalid Post Input!\");\n        }\n        if (resData.errrs) {\n          throw new Error(\"Post Creation failed\");\n        }\n        var resDataField = 'createPost';\n        if (_this.state.editPost) {\n          resDataField = 'updatePost';\n        }\n        var post = {\n          id: resData.data[resDataField]._id,\n          title: resData.data[resDataField].title,\n          content: resData.data[resDataField].content,\n          creator: resData.data[resDataField].creator,\n          createdAt: resData.data[resDataField].createdAt,\n          imagePath: resData.data[resDataField].imageUrl\n        };\n        _this.setState(function (prevState) {\n          var updatedPosts = _toConsumableArray(prevState.posts);\n          if (prevState.editPost) {\n            var postIndex = prevState.posts.findIndex(function (p) {\n              return p._id === prevState.editPost._id;\n            });\n            updatedPosts[postIndex] = post;\n          } else {\n            if (prevState.posts.length >= 2) {\n              updatedPosts.pop();\n            }\n            // updatedPosts.pop();\n            updatedPosts.unshift(post);\n          }\n          return {\n            isEditing: false,\n            editPost: null,\n            editLoading: false\n          };\n        });\n      }).catch(function (err) {\n        console.log(err);\n        _this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err\n        });\n      });\n    };\n    _this.statusInputChangeHandler = function (input, value) {\n      _this.setState({\n        status: value\n      });\n    };\n    _this.deletePostHandler = function (postId) {\n      _this.setState({\n        postsLoading: true\n      });\n      console.log(postId);\n      var grapQlquery = {\n        query: \"\\n        mutation{\\n          deletePost(id:\\\"                                                                           \".concat(postId, \"\\\")\\n        }\\n      \")\n      };\n      fetch('http://localhost:3002/graphql', {\n        method: 'POST',\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(grapQlquery)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resData) {\n        if (!resData) {\n          throw new Error('Deleting post Falied');\n        }\n        _this.loadPosts();\n      }).catch(function (err) {\n        console.log(err);\n        _this.setState({\n          postsLoading: false\n        });\n      });\n    };\n    _this.errorHandler = function () {\n      _this.setState({\n        error: null\n      });\n    };\n    _this.catchError = function (error) {\n      _this.setState({\n        error: error\n      });\n    };\n    return _this;\n  }\n  _createClass(Feed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      var graphQlQuery = {\n        query: \"\\n      {\\n        user{\\n          status\\n        }\\n      }\\n      \"\n      };\n      fetch('http://localhost:3002/graphql', {\n        method: 'POST',\n        headers: {\n          Authorization: 'Bearer ' + this.props.token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphQlQuery)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resData) {\n        if (!resData) {\n          throw new Error('Fetching Status Failed');\n        }\n        _this2.setState({\n          status: resData.data.user.status\n        });\n      }).catch(this.catchError);\n      this.loadPosts();\n      // const socket = io('http://localhost:3001');\n      // socket.on('post',data =>  {\n      //   if(data.action === 'create')\n      //   {\n      //     this.addPost(data.post);\n      //   }\n      //   else if(data.action === 'update')\n      //   {\n      //     this.updatedPost(data.post);\n      //   }\n      //   else if(data.action === 'delete')\n      //   {\n      //     this.loadPosts();\n      //   }\n      // })\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ErrorHandler, {\n        error: this.state.error,\n        onHandle: this.errorHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(FeedEdit, {\n        editing: this.state.isEditing,\n        selectedPost: this.state.editPost,\n        loading: this.state.editLoading,\n        onCancelEdit: this.cancelEditHandler,\n        onFinishEdit: this.finishEditHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed__status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.statusUpdateHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"Your status\",\n        control: \"input\",\n        onChange: this.statusInputChangeHandler,\n        value: this.state.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        mode: \"flat\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }\n      }, \"Update\"))), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed__control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        mode: \"raised\",\n        design: \"accent\",\n        onClick: this.newPostHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }\n      }, \"New Post\")), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 9\n        }\n      }, this.state.postsLoading && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '2rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 15\n        }\n      })), this.state.posts.length <= 0 && !this.state.postsLoading ? /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }\n      }, \"No posts found.\") : null, !this.state.postsLoading && /*#__PURE__*/React.createElement(Paginator, {\n        onPrevious: this.loadPosts.bind(this, 'previous'),\n        onNext: this.loadPosts.bind(this, 'next'),\n        lastPage: Math.ceil(this.state.totalPosts / 2),\n        currentPage: this.state.postPage\n        // lastPage={Math.ceil(4 / 2)}\n        // currentPage={1}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }\n      }, this.state.posts.map(function (post) {\n        return /*#__PURE__*/React.createElement(Post, {\n          key: post._id,\n          id: post._id,\n          author: post.creator.name,\n          date: new Date(post.createdAt).toLocaleDateString('en-US'),\n          title: post.title,\n          image: post.imageUrl,\n          content: post.content,\n          onStartEdit: _this3.startEditPostHandler.bind(_this3, post._id),\n          onDelete: _this3.deletePostHandler.bind(_this3, post._id),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 17\n          }\n        });\n      }))));\n    }\n  }]);\n  return Feed;\n}(Component);\nexport default Feed;","map":{"version":3,"names":["React","Component","Fragment","Post","Button","FeedEdit","Input","Paginator","Loader","ErrorHandler","Feed","_Component","_inherits","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","state","isEditing","posts","totalPosts","editPost","status","postPage","postsLoading","editLoading","addPost","post","setState","prevState","updatedPosts","_toConsumableArray","pop","unshift","updatedPost","updatedPostIndex","findIndex","p","_id","loadPosts","direction","page","graphqlQurey","query","variables","fetch","method","headers","Authorization","props","token","body","JSON","stringify","then","res","json","resData","console","log","errrs","Error","data","map","_objectSpread","imagePath","imageUrl","totalPost","catch","catchError","statusUpdateHandler","event","preventDefault","grapQlQuery","newPostHandler","startEditPostHandler","postId","loadedPost","find","cancelEditHandler","finishEditHandler","postData","formData","FormData","append","image","fetchResData","filePath","title","content","errors","resDataField","id","creator","createdAt","postIndex","err","error","statusInputChangeHandler","input","value","deletePostHandler","grapQlquery","errorHandler","_createClass","key","componentDidMount","_this2","graphQlQuery","user","render","_this3","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onHandle","editing","selectedPost","loading","onCancelEdit","onFinishEdit","className","onSubmit","type","placeholder","control","onChange","mode","design","onClick","style","textAlign","marginTop","onPrevious","bind","onNext","lastPage","Math","ceil","currentPage","author","name","date","Date","toLocaleDateString","onStartEdit","onDelete"],"sources":["/home/vishal/Documents/Backend/GraphQlFrontEnd/src/pages/Feed/Feed.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\n// import {io}  from 'socket.io-client';\nimport Post from '../../components/Feed/Post/Post';\nimport Button from '../../components/Button/Button';\nimport FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\nimport Input from '../../components/Form/Input/Input';\nimport Paginator from '../../components/Paginator/Paginator';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Feed.css';\n\nclass Feed extends Component {\n  state = {\n    isEditing: false,\n    posts: [],\n    totalPosts: 0,\n    editPost: null,\n    status: '',\n    postPage: 1,\n    postsLoading: true,\n    editLoading: false\n  };\n\n  componentDidMount() {\n\n    const graphQlQuery = {\n      query:`\n      {\n        user{\n          status\n        }\n      }\n      `\n    }\n    fetch('http://localhost:3002/graphql',{\n    method:'POST',  \n    headers:{\n        Authorization:'Bearer '+this.props.token,\n        'Content-Type': 'application/json'\n    },\n    body:JSON.stringify(graphQlQuery)\n\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n\n        if(!resData){\n          throw new Error('Fetching Status Failed');\n        }\n        this.setState({ status: resData.data.user.status });\n      })\n      .catch(this.catchError);\n\n    this.loadPosts();\n    // const socket = io('http://localhost:3001');\n    // socket.on('post',data =>  {\n    //   if(data.action === 'create')\n    //   {\n    //     this.addPost(data.post);\n    //   }\n    //   else if(data.action === 'update')\n    //   {\n    //     this.updatedPost(data.post);\n    //   }\n    //   else if(data.action === 'delete')\n    //   {\n    //     this.loadPosts();\n    //   }\n    // })\n  }\n  addPost = post => {\n    this.setState(prevState => {\n      const updatedPosts = [...prevState.posts];\n      if (prevState.postPage === 1) {\n        if (prevState.posts.length >= 2) {\n          updatedPosts.pop();\n        }\n        updatedPosts.unshift(post);\n      }\n      return {\n        posts: updatedPosts,\n        totalPosts: prevState.totalPosts + 1\n      };\n    });\n  }\n\n  updatedPost = post => {\n    this.setState(prevState => {\n      const updatedPosts = [...prevState.posts];\n      const updatedPostIndex = updatedPosts.findIndex(p => p._id === post._id);\n      if (updatedPostIndex > -1) {\n        updatedPosts[updatedPostIndex] = post;\n      }\n      return {\n        posts: updatedPosts\n      };\n    });\n  };\n\n  loadPosts = direction => {\n    if (direction) {\n      this.setState({ postsLoading: true, posts: [] });\n    }\n    let page = this.state.postPage;\n    if (direction === 'next') {\n      page++;\n      this.setState({ postPage: page });\n    }\n    if (direction === 'previous') {\n      page--;\n      this.setState({ postPage: page });\n    }\n    const graphqlQurey = {\n      query: `\n     query FetchPosts($page:Int!){\n      posts(page:$page){\n        posts {\n          _id\n          title\n          content\n          imageUrl\n          creator {\n            name\n          }\n          createdAt\n        }\n        totalPost\n      }\n     }\n    `,\n    variables:{\n      page:page\n    }\n    };\n    fetch('http://localhost:3002/graphql', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(graphqlQurey),\n    }).then(res => {\n      /*  if (res.status !== 200) {\n         throw new Error('Failed to fetch posts.');\n       } */\n      return res.json();\n    }).then(resData => {\n      console.log(resData);\n      if (resData.errrs) {\n        throw new Error(\"Fetching Post failed\");\n      }\n\n      this.setState({\n        posts: resData.data.posts.posts.map(post => {\n          return {\n            ...post,\n            imagePath: post.imageUrl\n          }\n        }),\n        totalPosts: resData.data.posts.totalPost,\n        postsLoading: false\n      });\n    }).catch(this.catchError);\n    console.log(this.state)\n  };\n\n  statusUpdateHandler = event => {\n    event.preventDefault();\n    const grapQlQuery = {\n      query:`\n      mutation{\n        updateStatus(status:\"${this.state.status}\"){\n          status\n        }\n      }\n      `\n    }\n    fetch('http://localhost:3002/graphql',{\n      method:'POST',\n      headers:{\n        Authorization:'Bearer ' + this.props.token,\n      'Content-Type':'application/json'\n      },\n      body:JSON.stringify(grapQlQuery)\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        if(!resData)\n        {\n          throw new Error(\"Status Update Failed\")\n        }\n        console.log(resData);\n      })\n      .catch(this.catchError);\n  };\n\n  newPostHandler = () => {\n    this.setState({ isEditing: true });\n  };\n\n  startEditPostHandler = postId => {\n    this.setState(prevState => {\n      const loadedPost = { ...prevState.posts.find(p => p._id === postId) };\n\n      return {\n        isEditing: true,\n        editPost: loadedPost\n      };\n    });\n  };\n\n  cancelEditHandler = () => {\n    this.setState({ isEditing: false, editPost: null });\n  };\n\n  finishEditHandler = postData => {\n    this.setState({\n      editLoading: true\n    });\n    // Set up data (with image!)\n    let formData = new FormData();\n    /*  formData.append('title',postData.title);\n     formData.append('content',postData.content); */\n    formData.append('image', postData.image);\n    // console.log(formData.get('image'));\n    if (this.state.editPost) {\n      console.log(this.state.editPost)\n      formData.append('oldPath', this.state.editPost.imagePath);\n    }\n  \n    fetch('http://localhost:3002/post-image',{\n      method:'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token\n      },\n      body:formData\n    }).then(res => {\n       return res.json();\n    }).then(fetchResData => {\n      console.log(fetchResData);\n      const imageUrl = fetchResData.filePath;\n      console.log(imageUrl);\n      let grapQlQuery = {\n        query: `\n          mutation{\n            createPost(postInput:{title:\"${postData.title}\",content:\"${postData.content}\",imageUrl:\"${imageUrl}\"}){\n              _id\n              title\n              content\n              imageUrl\n              creator{\n                name\n              }\n              createdAt\n            }\n          }\n        `\n      }\n\n       if (this.state.editPost) {\n        console.log(this.state.editPost._id)\n        grapQlQuery = {\n          query: `\n          mutation{\n              updatePost(id:\"${this.state.editPost._id}\",postInput:{title:\"${postData.title}\",content:\"${postData.content}\",imageUrl:\"${imageUrl}\"}){\n                _id\n                title\n                content\n                imageUrl\n                creator{\n                  name\n                }\n                createdAt\n              }\n            }\n          \n          `\n        }\n       }\n\n      return fetch('http://localhost:3002/graphql', {\n        method: 'POST',\n        headers: {\n          Authorization: 'Bearer ' + this.props.token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(grapQlQuery)\n      })\n    })\n     .then(res => {\n      /* if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Creating or editing a post failed!');\n      } */\n\n      return res.json();\n    }).then(resData => {\n      console.log(resData);\n      if (resData.errors && resData.errors[0] === 422) {\n        throw new Error(\"Invalid Post Input!\");\n      }\n      if (resData.errrs) {\n        throw new Error(\"Post Creation failed\");\n      }\n      let resDataField =  'createPost';\n      if(this.state.editPost){\n        resDataField = 'updatePost';\n      }\n      const post = {\n        id: resData.data[resDataField]._id,\n        title: resData.data[resDataField].title,\n        content: resData.data[resDataField].content,\n        creator: resData.data[resDataField].creator,\n        createdAt: resData.data[resDataField].createdAt,\n        imagePath: resData.data[resDataField].imageUrl\n      };\n\n\n\n      this.setState(prevState => {\n        let updatedPosts = [...prevState.posts];\n        if (prevState.editPost) {\n          const postIndex = prevState.posts.findIndex(\n            p => p._id === prevState.editPost._id\n          );\n          updatedPosts[postIndex] = post;\n        } else {\n          if (prevState.posts.length >= 2) {\n            updatedPosts.pop();\n          }\n          // updatedPosts.pop();\n          updatedPosts.unshift(post);\n        }\n        return {\n          isEditing: false,\n          editPost: null,\n          editLoading: false\n        };\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        isEditing: false,\n        editPost: null,\n        editLoading: false,\n        error: err\n      });\n    });\n  };\n\n  statusInputChangeHandler = (input, value) => {\n    this.setState({ status: value });\n  };\n\n  deletePostHandler = postId => {\n    this.setState({ postsLoading: true });\n    console.log(postId)\n    const grapQlquery = {\n      query:`\n        mutation{\n          deletePost(id:\"                                                                           ${postId}\")\n        }\n      `\n    }\n    fetch('http://localhost:3002/graphql',{\n    method:'POST',  \n    headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type':'application/json'\n      },\n      body:JSON.stringify(grapQlquery)\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        if(!resData){\n          throw new Error('Deleting post Falied')\n        }\n        this.loadPosts();\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ postsLoading: false });\n      });\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  catchError = error => {\n    this.setState({ error: error });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <FeedEdit\n          editing={this.state.isEditing}\n          selectedPost={this.state.editPost}\n          loading={this.state.editLoading}\n          onCancelEdit={this.cancelEditHandler}\n          onFinishEdit={this.finishEditHandler}\n        />\n        <section className=\"feed__status\">\n          <form onSubmit={this.statusUpdateHandler}>\n            <Input\n              type=\"text\"\n              placeholder=\"Your status\"\n              control=\"input\"\n              onChange={this.statusInputChangeHandler}\n              value={this.state.status}\n            />\n            <Button mode=\"flat\" type=\"submit\">\n              Update\n            </Button>\n          </form>\n        </section>\n        <section className=\"feed__control\">\n          <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler}>\n            New Post\n          </Button>\n        </section>\n        <section className=\"feed\">\n          {this.state.postsLoading && (\n            <div style={{ textAlign: 'center', marginTop: '2rem' }}>\n              <Loader />\n            </div>\n          )}\n          {this.state.posts.length <= 0 && !this.state.postsLoading ? (\n            <p style={{ textAlign: 'center' }}>No posts found.</p>\n          ) : null}\n          {!this.state.postsLoading && (\n            <Paginator\n              onPrevious={this.loadPosts.bind(this, 'previous')}\n              onNext={this.loadPosts.bind(this, 'next')}\n              lastPage={Math.ceil(this.state.totalPosts / 2)}\n              currentPage={this.state.postPage}\n            // lastPage={Math.ceil(4 / 2)}\n            // currentPage={1}\n            >\n              {this.state.posts.map(post => (\n                <Post\n                  key={post._id}\n                  id={post._id}\n                  author={post.creator.name}\n                  date={new Date(post.createdAt).toLocaleDateString('en-US')}\n                  title={post.title}\n                  image={post.imageUrl}\n                  content={post.content}\n                  onStartEdit={this.startEditPostHandler.bind(this, post._id)}\n                  onDelete={this.deletePostHandler.bind(this, post._id)}\n                />\n              ))}\n            </Paginator>\n\n          )}\n\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Feed;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["components/Layout/Layout.js","components/Backdrop/Backdrop.js","components/Toolbar/Toolbar.js","components/Navigation/MobileToggle/MobileToggle.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/MainNavigation/MainNavigation.js","components/Navigation/MobileNavigation/MobileNavigation.js","components/Button/Button.js","components/Modal/Modal.js","components/ErrorHandler/ErrorHandler.js","components/Feed/Post/Post.js","components/Form/Input/Input.js","components/Form/Input/FilePicker.js","components/Image/Image.js","util/validators.js","util/image.js","components/Feed/FeedEdit/FeedEdit.js","components/Paginator/Paginator.js","components/Loader/Loader.js","pages/Feed/Feed.js","pages/Feed/SinglePost/SinglePost.js","pages/Auth/Auth.js","pages/Auth/Login.js","pages/Auth/Signup.js","App.js","index.js"],"names":["layout","props","React","createElement","Fragment","className","header","mobileNav","children","backdrop","ReactDOM","createPortal","open","join","onClick","document","getElementById","toolbar","mobileToggle","onOpen","logo","navItems","id","text","link","auth","navigationItems","concat","_toConsumableArray","filter","item","isAuth","map","key","mobile","NavLink","to","exact","onChoose","onLogout","mainNavigation","MobileToggle","onOpenMobileNav","Logo","NavigationItems","mobileNavigation","onChooseItem","button","Link","design","mode","disabled","loading","type","modal","title","Button","onCancelModal","onAcceptModal","acceptEnabled","isLoading","errorHandler","error","Backdrop","onHandle","Modal","message","post","author","date","onStartEdit","onDelete","input","label","htmlFor","control","valid","touched","required","value","placeholder","onChange","e","target","files","onBlur","rows","filePicker","image","style","backgroundImage","imageUrl","backgroundSize","contain","backgroundPosition","left","trim","length","config","isValid","min","max","email","test","generateBase64FromImage","imageFile","reader","FileReader","promise","Promise","resolve","reject","onload","result","onerror","err","readAsDataURL","POST_FORM","validators","content","FeedEdit","_Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","state","postForm","formIsValid","imagePreview","postInputChangeHandler","then","b64","setState","catch","prevState","_step","_iterator","_createForOfIteratorHelper","s","n","done","validator","f","updatedForm","_objectSpread","_defineProperty","inputName","inputBlurHandler","cancelPostChangeHandler","onCancelEdit","acceptPostChangeHandler","onFinishEdit","_inherits","_createClass","prevProps","editing","selectedPost","imagePath","Input","bind","FilePicker","Image","Component","paginator","currentPage","onPrevious","lastPage","onNext","loader","Feed","isEditing","posts","totalPosts","editPost","status","postPage","postsLoading","editLoading","addPost","updatedPosts","pop","unshift","updatedPost","updatedPostIndex","findIndex","p","_id","loadPosts","direction","page","graphqlQurey","query","variables","fetch","method","headers","Authorization","token","Content-Type","body","JSON","stringify","res","json","resData","console","log","errrs","Error","data","fileName","totalPost","catchError","statusUpdateHandler","event","preventDefault","grapQlQuery","uerStatus","newPostHandler","startEditPostHandler","postId","find","cancelEditHandler","finishEditHandler","postData","formData","FormData","append","fetchResData","filePath","downloadUrl","errors","resDataField","creator","createdAt","filename","updateTotalPost","statusInputChangeHandler","deletePostHandler","grapQlquery","_this2","user","_this3","ErrorHandler","onSubmit","textAlign","marginTop","Loader","Paginator","Math","ceil","Post","name","Date","toLocaleDateString","SinglePost","match","params","graphqlQuery","Login","loginForm","password","inputChangeHandler","Auth","onLogin","Signup","signupForm","onSignup","App","showBackdrop","showMobileNav","userId","authLoading","mobileNavHandler","isOpen","backdropClickHandler","logoutHandler","localStorage","removeItem","loginHandler","authData","graphQlQuery","login","setItem","expiryDate","getTime","toISOString","setAutoLogout","signupHandler","history","replace","milliseconds","setTimeout","getItem","remainingMilliseconds","routes","Switch","Route","path","render","LoginPage","Object","assign","SignupPage","Redirect","FeedPage","SinglePostPage","Layout","Toolbar","MainNavigation","MobileNavigation","withRouter","BrowserRouter"],"mappings":"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","file":"static/js/main.6a0a7621.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\n\nimport './Layout.css';\n\nconst layout = props => (\n  <Fragment>\n    <header className=\"main-header\">{props.header}</header>\n    {props.mobileNav}\n    <main className=\"content\">{props.children}</main>\n  </Fragment>\n);\n\nexport default layout;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst backdrop = props =>\n  ReactDOM.createPortal(\n    <div\n      className={['backdrop', props.open ? 'open' : ''].join(' ')}\n      onClick={props.onClick}\n    />,\n    document.getElementById('backdrop-root')\n  );\n\nexport default backdrop;\n","import React from 'react';\n\nimport './Toolbar.css';\n\nconst toolbar = props => (\n    <div className=\"toolbar\">\n       {props.children}\n    </div>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport './MobileToggle.css';\n\nconst mobileToggle = props => (\n  <button className=\"mobile-toggle\" onClick={props.onOpen}>\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n  </button>\n);\n\nexport default mobileToggle;\n","import React from 'react';\n\nimport './Logo.css';\n\nconst logo = props => <h1 className=\"logo\">MessageNode</h1>;\n\nexport default logo;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './NavigationItems.css';\n\nconst navItems = [\n  { id: 'feed', text: 'Feed', link: '/', auth: true },\n  { id: 'login', text: 'Login', link: '/', auth: false },\n  { id: 'signup', text: 'Signup', link: '/signup', auth: false }\n];\n\nconst navigationItems = props => [\n  ...navItems.filter(item => item.auth === props.isAuth).map(item => (\n    <li\n      key={item.id}\n      className={['navigation-item', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavLink to={item.link} exact onClick={props.onChoose}>\n        {item.text}\n      </NavLink>\n    </li>\n  )),\n  props.isAuth && (\n    <li className=\"navigation-item\" key=\"logout\">\n      <button onClick={props.onLogout}>Logout</button>\n    </li>\n  )\n];\n\nexport default navigationItems;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport MobileToggle from '../MobileToggle/MobileToggle';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\n\nimport './MainNavigation.css';\n\nconst mainNavigation = props => (\n  <nav className=\"main-nav\">\n    <MobileToggle onOpen={props.onOpenMobileNav} />\n    <div className=\"main-nav__logo\">\n      <NavLink to=\"/\">\n        <Logo />\n      </NavLink>\n    </div>\n    <div className=\"spacer\" />\n    <ul className=\"main-nav__items\">\n      <NavigationItems isAuth={props.isAuth} onLogout={props.onLogout} />\n    </ul>\n  </nav>\n);\n\nexport default mainNavigation;\n","import React from 'react';\n\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './MobileNavigation.css';\n\nconst mobileNavigation = props => (\n  <nav className={['mobile-nav', props.open ? 'open' : ''].join(' ')}>\n    <ul\n      className={['mobile-nav__items', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavigationItems\n        mobile\n        onChoose={props.onChooseItem}\n        isAuth={props.isAuth}\n        onLogout={props.onLogout}\n      />\n    </ul>\n  </nav>\n);\n\nexport default mobileNavigation;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst button = props =>\n  !props.link ? (\n    <button\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      onClick={props.onClick}\n      disabled={props.disabled || props.loading}\n      type={props.type}\n    >\n      {props.loading ? 'Loading...' : props.children}\n    </button>\n  ) : (\n    <Link\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      to={props.link}\n    >\n      {props.children}\n    </Link>\n  );\n\nexport default button;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Button from '../Button/Button';\nimport './Modal.css';\n\nconst modal = props =>\n  ReactDOM.createPortal(\n    <div className=\"modal\">\n      <header className=\"modal__header\">\n        <h1>{props.title}</h1>\n      </header>\n      <div className=\"modal__content\">{props.children}</div>\n      <div className=\"modal__actions\">\n        <Button design=\"danger\" mode=\"flat\" onClick={props.onCancelModal}>\n          Cancel\n        </Button>\n        <Button\n          mode=\"raised\"\n          onClick={props.onAcceptModal}\n          disabled={!props.acceptEnabled}\n          loading={props.isLoading}\n        >\n          Accept\n        </Button>\n      </div>\n    </div>,\n    document.getElementById('modal-root')\n  );\n\nexport default modal;\n","import React, { Fragment } from 'react';\n\nimport Backdrop from '../Backdrop/Backdrop';\nimport Modal from '../Modal/Modal';\n\nconst errorHandler = props => (\n  <Fragment>\n    {props.error && <Backdrop onClick={props.onHandle} />}\n    {props.error && (\n      <Modal\n        title=\"An Error Occurred\"\n        onCancelModal={props.onHandle}\n        onAcceptModal={props.onHandle}\n        acceptEnabled\n      >\n        <p>{props.error.message}</p>\n      </Modal>\n    )}\n  </Fragment>\n);\n\nexport default errorHandler;\n","import React from 'react';\n\nimport Button from '../../Button/Button';\nimport './Post.css';\n\nconst post = props => (\n  <article className=\"post\">\n    <header className=\"post__header\">\n      <h3 className=\"post__meta\">\n        Posted by {props.author} on {props.date}\n      </h3>\n      <h1 className=\"post__title\">{props.title}</h1>\n    </header>\n    {/* <div className=\"post__image\">\n      <Image imageUrl={props.image} contain />\n    </div>\n    <div className=\"post__content\">{props.content}</div> */}\n    <div className=\"post__actions\">\n      <Button mode=\"flat\" link={props.id}>\n        View\n      </Button>\n      <Button mode=\"flat\" onClick={props.onStartEdit}>\n        Edit\n      </Button>\n      <Button mode=\"flat\" design=\"danger\" onClick={props.onDelete}>\n        Delete\n      </Button>\n    </div>\n  </article>\n  \n);\n\nexport default post;\n","import React from 'react';\n\nimport './Input.css';\n\nconst input = props => (\n  <div className=\"input\">\n    {props.label && <label htmlFor={props.id}>{props.label}</label>}\n    {props.control === 'input' && (\n      <input\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        type={props.type}\n        id={props.id}\n        required={props.required}\n        value={props.value}\n        placeholder={props.placeholder}\n        onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n        onBlur={props.onBlur}\n      />\n    )}\n    {props.control === 'textarea' && (\n      <textarea\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        id={props.id}\n        rows={props.rows}\n        required={props.required}\n        value={props.value}\n        onChange={e => props.onChange(props.id, e.target.value)}\n        onBlur={props.onBlur}\n      />\n    )}\n  </div>\n);\n\nexport default input;\n","import React from 'react';\n\nimport './Input.css';\n\nconst filePicker = props => (\n  <div className=\"input\">\n    <label htmlFor={props.id}>{props.label}</label>\n    <input\n      className={[\n        !props.valid ? 'invalid' : 'valid',\n        props.touched ? 'touched' : 'untouched'\n      ].join(' ')}\n      type=\"file\"\n      id={props.id}\n      onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n      onBlur={props.onBlur}\n    />\n  </div>\n);\n\nexport default filePicker;\n","import React from 'react';\n\nimport './Image.css';\n\nconst image = props => (\n  \n  <div\n    className=\"image\"\n    style={{\n      backgroundImage: `url('${props.imageUrl}')`,\n      backgroundSize: props.contain ? 'contain' : 'cover',\n      backgroundPosition: props.left ? 'left' : 'center'\n    }}\n  />\n);\n\nexport default image;\n","export const required = value => value.trim() !== '';\n\nexport const length = config => value => {\n  let isValid = true;\n  if (config.min) {\n    isValid = isValid && value.trim().length >= config.min;\n  }\n  if (config.max) {\n    isValid = isValid && value.trim().length <= config.max;\n  }\n  return isValid;\n};\n\nexport const email = value =>\n  /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(\n    value\n  );\n","export const generateBase64FromImage = imageFile => {\n  const reader = new FileReader();\n  const promise = new Promise((resolve, reject) => {\n    reader.onload = e => resolve(e.target.result);\n    reader.onerror = err => reject(err);\n  });\n\n  reader.readAsDataURL(imageFile);\n  return promise;\n};\n","import React, { Component, Fragment } from 'react';\n\nimport Backdrop from '../../Backdrop/Backdrop';\nimport Modal from '../../Modal/Modal';\nimport Input from '../../Form/Input/Input';\nimport FilePicker from '../../Form/Input/FilePicker';\nimport Image from '../../Image/Image';\nimport { required, length } from '../../../util/validators';\nimport { generateBase64FromImage } from '../../../util/image';\n\nconst POST_FORM = {\n  title: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  },\n  image: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required]\n  },\n  content: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  }\n};\n\nclass FeedEdit extends Component {\n  state = {\n    postForm: POST_FORM,\n    formIsValid: false,\n    imagePreview: null\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.editing &&\n      prevProps.editing !== this.props.editing &&\n      prevProps.selectedPost !== this.props.selectedPost\n    ) {\n      const postForm = {\n        title: {\n          ...prevState.postForm.title,\n          value: this.props.selectedPost.title,\n          valid: true\n        },\n        image: {\n          ...prevState.postForm.image,\n          value: this.props.selectedPost.imagePath,\n          valid: true\n        },\n        content: {\n          ...prevState.postForm.content,\n          value: this.props.selectedPost.content,\n          valid: true\n        }\n      };\n      this.setState({ postForm: postForm, formIsValid: true });\n    }\n  }\n\n  postInputChangeHandler = (input, value, files) => {\n    if (files) {\n      generateBase64FromImage(files[0])\n        .then(b64 => {\n          this.setState({ imagePreview: b64 });\n        })\n        .catch(e => {\n          this.setState({ imagePreview: null });\n        });\n    }\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.postForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.postForm,\n        [input]: {\n          ...prevState.postForm[input],\n          valid: isValid,\n          value: files ? files[0] : value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        postForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        postForm: {\n          ...prevState.postForm,\n          [input]: {\n            ...prevState.postForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  cancelPostChangeHandler = () => {\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false\n    });\n    this.props.onCancelEdit();\n  };\n\n  acceptPostChangeHandler = () => {\n    const post = {\n      title: this.state.postForm.title.value,\n      image: this.state.postForm.image.value,\n      content: this.state.postForm.content.value\n    };\n    this.props.onFinishEdit(post);\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false,\n      imagePreview: null\n    });\n  };\n\n  render() {\n    return this.props.editing ? (\n      <Fragment>\n        <Backdrop onClick={this.cancelPostChangeHandler} />\n        <Modal\n          title=\"New Post\"\n          acceptEnabled={this.state.formIsValid}\n          onCancelModal={this.cancelPostChangeHandler}\n          onAcceptModal={this.acceptPostChangeHandler}\n          isLoading={this.props.loading}\n        >\n          <form>\n            <Input\n              id=\"title\"\n              label=\"Title\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'title')}\n              valid={this.state.postForm['title'].valid}\n              touched={this.state.postForm['title'].touched}\n              value={this.state.postForm['title'].value}\n            />\n            <FilePicker\n              id=\"image\"\n              label=\"Image\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'image')}\n              valid={this.state.postForm['image'].valid}\n              touched={this.state.postForm['image'].touched}\n            />\n            <div className=\"new-post__preview-image\">\n              {!this.state.imagePreview && <p>Please choose an image.</p>}\n              {this.state.imagePreview && (\n                <Image imageUrl={this.state.imagePreview} contain left />\n              )}\n            </div>\n            <Input\n              id=\"content\"\n              label=\"Content\"\n              control=\"textarea\"\n              rows=\"5\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'content')}\n              valid={this.state.postForm['content'].valid}\n              touched={this.state.postForm['content'].touched}\n              value={this.state.postForm['content'].value}\n            />\n          </form>\n        </Modal>\n      </Fragment>\n    ) : null;\n  }\n}\n\nexport default FeedEdit;\n","import React from 'react';\n\nimport './Paginator.css';\n\nconst paginator = props => (\n  <div className=\"paginator\">\n    {props.children}\n    <div className=\"paginator__controls\">\n      {props.currentPage > 1 && (\n        <button className=\"paginator__control\" onClick={props.onPrevious}>\n          Previous\n        </button>\n      )}\n      {props.currentPage < props.lastPage && (\n        <button className=\"paginator__control\" onClick={props.onNext}>\n          Next\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nexport default paginator;\n","import React from 'react';\n\nimport './Loader.css';\n\nconst loader = props => (\n  <div className=\"loader\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default loader;\n","import React, { Component, Fragment } from 'react';\nimport Post from '../../components/Feed/Post/Post';\nimport Button from '../../components/Button/Button';\nimport FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\nimport Input from '../../components/Form/Input/Input';\nimport Paginator from '../../components/Paginator/Paginator';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Feed.css';\n\nclass Feed extends Component {\n  state = {\n    isEditing: false,\n    posts: [],\n    totalPosts: 0,\n    editPost: null,\n    status: '',\n    postPage: 1,\n    postsLoading: true,\n    editLoading: false\n  };\n\n  componentDidMount() {\n\n    const graphQlQuery = {\n      query:`\n      {\n        user{\n          status\n        }\n      }\n      `\n    }\n    fetch('https://feed-backend-api.onrender.com/graphql',{\n    method:'POST',  \n    headers:{\n        Authorization:'Bearer '+this.props.token,\n        'Content-Type': 'application/json'\n    },\n    body:JSON.stringify(graphQlQuery)\n\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n\n        if(!resData){\n          throw new Error('Fetching Status Failed');\n        }\n        this.setState({ status: resData.data.user.status });\n      })\n      .catch(this.catchError);\n\n    this.loadPosts();\n   \n    // socket.on('post',data =>  {\n    //   if(data.action === 'create')\n    //   {\n    //     this.addPost(data.post);\n    //   }\n    //   else if(data.action === 'update')\n    //   {\n    //     this.updatedPost(data.post);\n    //   }\n    //   else if(data.action === 'delete')\n    //   {\n    //     this.loadPosts();\n    //   }\n    // })\n  }\n  addPost = post => {\n    this.setState(prevState => {\n      const updatedPosts = [...prevState.posts];\n      if (prevState.postPage === 1) {\n        if (prevState.posts.length >= 2) {\n          updatedPosts.pop();\n        }\n        updatedPosts.unshift(post);\n      }\n      return {\n        posts: updatedPosts,\n        totalPosts: prevState.totalPosts + 1\n      };\n    });\n  }\n\n  updatedPost = post => {\n    this.setState(prevState => {\n      const updatedPosts = [...prevState.posts];\n      const updatedPostIndex = updatedPosts.findIndex(p => p._id === post._id);\n      if (updatedPostIndex > -1) {\n        updatedPosts[updatedPostIndex] = post;\n      }\n      return {\n        posts: updatedPosts\n      };\n    });\n  };\n\n  loadPosts = direction => {\n    if (direction) {\n      this.setState({ postsLoading: true, posts: [] });\n    }\n    let page = this.state.postPage;\n    if (direction === 'next') {\n      page++;\n      this.setState({ postPage: page });\n    }\n    if (direction === 'previous') {\n      page--;\n      this.setState({ postPage: page });\n    }\n    const graphqlQurey = {\n      query: `\n     query FetchPosts($page:Int!){\n      posts(page:$page){\n        posts {\n          _id\n          title\n          content\n          imageUrl\n          fileName\n          creator {\n            name\n          }\n          createdAt\n        }\n        totalPost\n      }\n     }\n    `,\n    variables:{\n      page:page\n    }\n    };\n    fetch('https://feed-backend-api.onrender.com/graphql', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(graphqlQurey),\n    }).then(res => {\n      /*  if (res.status !== 200) {\n         throw new Error('Failed to fetch posts.');\n       } */\n      return res.json();\n    }).then(resData => {\n      console.log(resData);\n      if (resData.errrs) {\n        throw new Error(\"Fetching Post failed\");\n      }\n\n      this.setState({\n        posts: resData.data.posts.posts.map(post => {\n          console.log(post);\n          return {\n            ...post,\n            imagePath: post.imageUrl,\n            fileName: post.fileName\n          }\n        }),\n        totalPosts: resData.data.posts.totalPost,\n        postsLoading: false\n      });\n    }).catch(this.catchError);\n    console.log(this.state)\n  };\n\n  statusUpdateHandler = event => {\n    event.preventDefault();\n    const grapQlQuery = {\n      query:`\n      mutation updateUserStatus($uerStatus : String!){\n        updateStatus(status:$uerStatus){\n          status\n        }\n      }\n      `,\n      variables:{\n        uerStatus:this.state.status\n      }\n    }\n    fetch('https://feed-backend-api.onrender.com/graphql',{\n      method:'POST',\n      headers:{\n        Authorization:'Bearer ' + this.props.token,\n      'Content-Type':'application/json'\n      },\n      body:JSON.stringify(grapQlQuery)\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        if(!resData)\n        {\n          throw new Error(\"Status Update Failed\")\n        }\n        console.log(resData);\n      })\n      .catch(this.catchError);\n  };\n\n  newPostHandler = () => {\n    this.setState({ isEditing: true });\n  };\n\n  startEditPostHandler = postId => {\n    this.setState(prevState => {\n      console.log(prevState);\n      const loadedPost = { ...prevState.posts.find(p => p._id === postId) };\n\n      return {\n        isEditing: true,\n        editPost: loadedPost\n      };\n    });\n  };\n\n  cancelEditHandler = () => {\n    this.setState({ isEditing: false, editPost: null });\n  };\n\n  finishEditHandler = postData => {\n    this.setState({\n      editLoading: true\n    });\n    // Set up data (with image!)\n    let formData = new FormData();\n    /*  formData.append('title',postData.title);\n     formData.append('content',postData.content); */\n    formData.append('image', postData.image);\n    // console.log(formData.get('image'));\n    if (this.state.editPost) {\n      console.log(this.state.editPost)\n      formData.append('oldPath', this.state.editPost.fileName);\n      formData.append('oldUrl', this.state.editPost.imagePath);\n      \n    }\n  \n    fetch('https://feed-backend-api.onrender.com/post-image',{\n      method:'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token\n      },\n      body:formData\n    }).then(res => {\n       return res.json();\n    }).then(fetchResData => {\n      console.log(fetchResData);\n      const fileName = fetchResData.filePath;\n      const imageUrl = fetchResData.downloadUrl;\n      console.log(fileName);\n      console.log(imageUrl);\n      let grapQlQuery = {\n        query: `\n          mutation addNewPost($title:String!,$content:String!,$imageUrl:String!,$fileName:String!){\n            createPost(postInput:{title:$title,content:$content,imageUrl:$imageUrl,fileName:$fileName}){\n              _id\n              title\n              content\n              imageUrl\n              fileName\n              creator{\n                name\n              }\n              createdAt\n            }\n          }\n        `,\n        variables:{\n          title:postData.title,\n          content:postData.content,\n          imageUrl:imageUrl,\n          fileName:fileName\n        }\n      }\n\n       if (this.state.editPost) {\n        console.log(this.state.editPost._id)\n        console.log(this.state.editPost)\n        grapQlQuery = {\n          query: `\n          mutation editPost($postId:ID!,$title:String!,$content:String!,$imageUrl:String!,$fileName:String!){\n              updatePost(id:$postId,postInput:{title:$title,content:$content,imageUrl:$imageUrl,fileName:$fileName}){\n                _id\n                title\n                content\n                imageUrl\n                fileName\n                creator{\n                  name\n                }\n                createdAt\n              }\n            }\n          \n          `,\n          variables:{\n            postId:this.state.editPost._id,\n            title:postData.title,\n            content:postData.content,\n            imageUrl:imageUrl,\n            fileName:fileName\n\n          }\n        }\n       }\n\n      return fetch('https://feed-backend-api.onrender.com/graphql', {\n        method: 'POST',\n        headers: {\n          Authorization: 'Bearer ' + this.props.token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(grapQlQuery)\n      })\n    })\n     .then(res => {\n      /* if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Creating or editing a post failed!');\n      } */\n      // console.log(res.json())\n      return res.json();\n    }).then(resData => {\n      console.log(resData);\n      if (resData.errors && resData.errors[0] === 422) {\n        throw new Error(\"Invalid Post Input!\");\n      }\n      if (resData.errrs) {\n        throw new Error(\"Post Creation failed\");\n      }\n      let resDataField =  'createPost';\n      if(this.state.editPost){\n        resDataField = 'updatePost';\n      }\n     \n      const post = {\n        id: resData.data[resDataField]._id,\n        title: resData.data[resDataField].title,\n        content: resData.data[resDataField].content,\n        creator: resData.data[resDataField].creator,\n        createdAt: resData.data[resDataField].createdAt,\n        imagePath: resData.data[resDataField].imageUrl,\n        filename: resData.data[resDataField].fileName\n      };\n      console.log(post);\n\n\n\n      this.setState(prevState => {\n        console.log(prevState)\n        let updatedPosts = [...prevState.posts];\n        let updateTotalPost = prevState.totalPost;\n        if (prevState.editPost) {\n          const postIndex = prevState.posts.findIndex(\n            p => p._id === prevState.editPost._id\n          );\n          updatedPosts[postIndex] = post;\n      \n        } else {\n          updateTotalPost++;\n          if (prevState.posts.length >= 2) {\n            updatedPosts.pop();\n          }\n          // updatedPosts.pop();\n          updatedPosts.unshift(post);\n        }\n        return {\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          totalPosts:updateTotalPost\n        };\n      });\n      this.loadPosts();\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        isEditing: false,\n        editPost: null,\n        editLoading: false,\n        error: err\n      });\n    });\n  };\n\n  statusInputChangeHandler = (input, value) => {\n    this.setState({ status: value });\n  };\n\n  deletePostHandler = postId => {\n    this.setState({ postsLoading: true });\n    console.log(postId)\n    const grapQlquery = {\n      query:`\n        mutation DeletePost($postId:ID!){\n          deletePost(id:$postId)\n        }\n      `,\n      variables : {\n        postId: postId\n      }\n    }\n    fetch('https://feed-backend-api.onrender.com/graphql',{\n    method:'POST',  \n    headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type':'application/json'\n      },\n      body:JSON.stringify(grapQlquery)\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        if(!resData){\n          throw new Error('Deleting post Falied')\n        }\n        this.loadPosts();\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ postsLoading: false });\n      });\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  catchError = error => {\n    this.setState({ error: error });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <FeedEdit\n          editing={this.state.isEditing}\n          selectedPost={this.state.editPost}\n          loading={this.state.editLoading}\n          onCancelEdit={this.cancelEditHandler}\n          onFinishEdit={this.finishEditHandler}\n        />\n        <section className=\"feed__status\">\n          <form onSubmit={this.statusUpdateHandler}>\n            <Input\n              type=\"text\"\n              placeholder=\"Your status\"\n              control=\"input\"\n              onChange={this.statusInputChangeHandler}\n              value={this.state.status}\n            />\n            <Button mode=\"flat\" type=\"submit\">\n              Update\n            </Button>\n          </form>\n        </section>\n        <section className=\"feed__control\">\n          <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler}>\n            New Post\n          </Button>\n        </section>\n        <section className=\"feed\">\n          {this.state.postsLoading && (\n            <div style={{ textAlign: 'center', marginTop: '2rem' }}>\n              <Loader />\n            </div>\n          )}\n          {this.state.posts.length <= 0 && !this.state.postsLoading ? (\n            <p style={{ textAlign: 'center' }}>No posts found.</p>\n          ) : null}\n          {!this.state.postsLoading && (\n            <Paginator\n              onPrevious={this.loadPosts.bind(this, 'previous')}\n              onNext={this.loadPosts.bind(this, 'next')}\n              lastPage={Math.ceil(this.state.totalPosts / 2)}\n              currentPage={this.state.postPage}\n            // lastPage={Math.ceil(4 / 2)}\n            // currentPage={1}\n            >\n              {this.state.posts.map(post => (\n              \n                <Post\n                  key={post._id}\n                  id={post._id}\n                  author={post.creator.name}\n                  date={new Date(post.createdAt).toLocaleDateString('en-US')}\n                  title={post.title}\n                  image={post.imageUrl}\n                  content={post.content}\n                  onStartEdit={this.startEditPostHandler.bind(this, post._id)}\n                  onDelete={this.deletePostHandler.bind(this, post._id)}\n                />\n                 \n              ))}\n            </Paginator>\n\n          )}\n\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Feed;\n","import React, { Component } from 'react';\n\nimport Image from '../../../components/Image/Image';\nimport './SinglePost.css';\n\nclass SinglePost extends Component {\n  state = {\n    title: '',\n    author: '',\n    date: '',\n    image: '',\n    content: ''\n  };\n\n  componentDidMount() {\n    const postId = this.props.match.params.postId;\n    console.log(postId);\n    const graphqlQuery = {\n      query: `\n      query FetchSinglePost($postId:ID!){\n        post(id: $postId) {\n          title\n          content\n          imageUrl\n          creator {\n            name\n          }\n          createdAt\n        }\n      }\n    `,\n      variables: {\n        postId: postId\n      }\n    }\n    fetch('https://feed-backend-api.onrender.com/graphql', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(graphqlQuery)\n    }).then(res => {\n      return res.json();\n    }).then(resData => {\n      console.log(resData);\n      if (!resData) {\n        throw new Error('Post Fetch Falied')\n      }\n\n      this.setState({\n        title: resData.data.post.title,\n        author: resData.data.post.creator.name,\n        imageUrl: resData.data.post.imageUrl,\n        date: new Date(resData.data.post.createdAt).toLocaleDateString('en-US'),\n        content: resData.data.post.content\n      });\n    })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <section className=\"single-post\">\n        <h1>{this.state.title}</h1>\n        <h2>\n          Created by {this.state.author} on {this.state.date}\n        </h2>\n        <div className=\"single-post__image\">\n          <Image contain imageUrl={this.state.imageUrl} />\n        </div>\n        <p>{this.state.content}</p>\n      </section>\n    );\n  }\n}\n\nexport default SinglePost;\n","import React from 'react';\n\nimport './Auth.css';\n\nconst auth = props => <section className=\"auth-form\">{props.children}</section>;\n\nexport default auth;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Login extends Component {\n  state = {\n    loginForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      formIsValid: false\n    }\n  };\n\n  inputChangeHandler = (input, value) => {\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.loginForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.loginForm,\n        [input]: {\n          ...prevState.loginForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        loginForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        loginForm: {\n          ...prevState.loginForm,\n          [input]: {\n            ...prevState.loginForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Auth>\n        <form\n          onSubmit={e =>\n            this.props.onLogin(e, {\n              email: this.state.loginForm.email.value,\n              password: this.state.loginForm.password.value\n            })\n          }\n        >\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\n            value={this.state.loginForm['email'].value}\n            valid={this.state.loginForm['email'].valid}\n            touched={this.state.loginForm['email'].touched}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\n            value={this.state.loginForm['password'].value}\n            valid={this.state.loginForm['password'].valid}\n            touched={this.state.loginForm['password'].touched}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={this.props.loading}>\n            Login\n          </Button>\n        </form>\n      </Auth>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Signup extends Component {\n  state = {\n    signupForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      name: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required]\n      },\n      formIsValid: false\n    }\n  };\n\n  inputChangeHandler = (input, value) => {\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.signupForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.signupForm,\n        [input]: {\n          ...prevState.signupForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        signupForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        signupForm: {\n          ...prevState.signupForm,\n          [input]: {\n            ...prevState.signupForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Auth>\n        <form onSubmit={e => this.props.onSignup(e, this.state)}>\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\n            value={this.state.signupForm['email'].value}\n            valid={this.state.signupForm['email'].valid}\n            touched={this.state.signupForm['email'].touched}\n          />\n          <Input\n            id=\"name\"\n            label=\"Your Name\"\n            type=\"text\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'name')}\n            value={this.state.signupForm['name'].value}\n            valid={this.state.signupForm['name'].valid}\n            touched={this.state.signupForm['name'].touched}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\n            value={this.state.signupForm['password'].value}\n            valid={this.state.signupForm['password'].valid}\n            touched={this.state.signupForm['password'].touched}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={this.props.loading}>\n            Signup\n          </Button>\n        </form>\n      </Auth>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component, Fragment } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport Toolbar from './components/Toolbar/Toolbar';\nimport MainNavigation from './components/Navigation/MainNavigation/MainNavigation';\nimport MobileNavigation from './components/Navigation/MobileNavigation/MobileNavigation';\nimport ErrorHandler from './components/ErrorHandler/ErrorHandler';\nimport FeedPage from './pages/Feed/Feed';\nimport SinglePostPage from './pages/Feed/SinglePost/SinglePost';\nimport LoginPage from './pages/Auth/Login';\nimport SignupPage from './pages/Auth/Signup';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    showBackdrop: false,\n    showMobileNav: false,\n    isAuth: false,\n    token: null,\n    userId: null,\n    authLoading: false,\n    error: null\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n    const expiryDate = localStorage.getItem('expiryDate');\n    if (!token || !expiryDate) {\n      return;\n    }\n    if (new Date(expiryDate) <= new Date()) {\n      this.logoutHandler();\n      return;\n    }\n    const userId = localStorage.getItem('userId');\n    const remainingMilliseconds =\n      new Date(expiryDate).getTime() - new Date().getTime();\n    this.setState({ isAuth: true, token: token, userId: userId });\n    this.setAutoLogout(remainingMilliseconds);\n  }\n\n  mobileNavHandler = isOpen => {\n    this.setState({ showMobileNav: isOpen, showBackdrop: isOpen });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({ showBackdrop: false, showMobileNav: false, error: null });\n  };\n\n  logoutHandler = () => {\n    this.setState({ isAuth: false, token: null });\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiryDate');\n    localStorage.removeItem('userId');\n  };\n\n  loginHandler = (event, authData) => {\n    event.preventDefault();\n    this.setState({ authLoading: true });\n\n    const graphQlQuery = {\n      query: `\n      query Login($email:String!, $password:String!){\n        login(email:$email, password:$password){\n          token\n          userId\n        }\n      }\n\n      `,\n      variables:{\n        email : authData.email,\n        password : authData.password\n      }\n    }\n    fetch('http://localhost:3002/graphql',{\n      method:'POST',\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      body:JSON.stringify(graphQlQuery)\n      /* body:JSON.stringify({\n        email:authData.email,\n        password:authData.password\n      }) */\n    })\n      .then(res => {\n        if (res.status === 422) {\n          throw new Error('Validation failed.');\n        }\n        if (res.status !== 200 && res.status !== 201) {\n          console.log('Error!');\n          throw new Error('Could not authenticate you!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData.data.login.token);\n        this.setState({\n          isAuth: true,\n          token: resData.data.login.token,\n          authLoading: false,\n          userId: resData.data.login.userId\n        });\n        localStorage.setItem('token', resData.data.login.token);\n        localStorage.setItem('userId', resData.data.login.userId);\n        const remainingMilliseconds = 60 * 60 * 1000;\n        const expiryDate = new Date(\n          new Date().getTime() + remainingMilliseconds\n        );\n        localStorage.setItem('expiryDate', expiryDate.toISOString());\n        this.setAutoLogout(remainingMilliseconds);\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isAuth: false,\n          authLoading: false,\n          error: err\n        });\n      });\n  };\n\n  signupHandler = (event, authData) => {\n    event.preventDefault();\n    this.setState({ authLoading: true });\n    \n    const graphQlQuery = {\n      query:`\n      mutation AddnewUser($email:String!,$name:String!,$password:String!){\n        createUser(userInput:{\n          email:$email,\n          name:$name,\n          password:$password\n        }){\n          _id,\n          email\n        }\n      }\n      `,\n      variables:{\n        email:authData.signupForm.email.value,\n        name:authData.signupForm.name.value,\n        password:authData.signupForm.password.value\n      }\n    }\n\n    fetch('http://localhost:3002/graphql',{\n      method:'POST',\n      headers:{\n        'Content-Type':'application/json'\n      },\n      body:JSON.stringify(graphQlQuery)\n      /* body:JSON.stringify({\n        email:authData.signupForm.email.value,\n        password:authData.signupForm.password.value,\n        name:authData.signupForm.name.value\n      }) */\n    }).then(res => {\n       /*  if (res.status === 422) {\n          throw new Error(\n            \"Validation failed. Make sure the email address isn't used yet!\"\n          );\n        }\n        if (res.status !== 200 && res.status !== 201) {\n          console.log('Error!');\n          throw new Error('Creating a user failed!');\n        } */\n        return res.json();\n      })\n      .then(resData => {\n\n        if(resData.errors && resData.errors[0].status === 422 )\n        {\n          throw new Error(\"Validation failed! make sure the email address is not used yet!\");\n        }\n        if(resData.errrs)\n        {\n          throw new Error(\"User Creation failed\");\n        }\n        console.log(resData);\n        this.setState({ isAuth: false, authLoading: false });\n        this.props.history.replace('/');\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isAuth: false,\n          authLoading: false,\n          error: err\n        });\n      });\n  };\n\n  setAutoLogout = milliseconds => {\n    setTimeout(() => {\n      this.logoutHandler();\n    }, milliseconds);\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={props => (\n            <LoginPage\n              {...props}\n              onLogin={this.loginHandler}\n              loading={this.state.authLoading}\n            />\n          )}\n        />\n        <Route\n          path=\"/signup\"\n          exact\n          render={props => (\n            <SignupPage\n              {...props}\n              onSignup={this.signupHandler}\n              loading={this.state.authLoading}\n            />\n          )}\n        />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n    if (this.state.isAuth) {\n      routes = (\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={props => (\n              <FeedPage userId={this.state.userId} token={this.state.token} />\n            )}\n          />\n          <Route\n            path=\"/:postId\"\n            render={props => (\n              <SinglePostPage\n                {...props}\n                userId={this.state.userId}\n                token={this.state.token}\n              />\n            )}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n    return (\n      <Fragment>\n        {this.state.showBackdrop && (\n          <Backdrop onClick={this.backdropClickHandler} />\n        )}\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <Layout\n          header={\n            <Toolbar>\n              <MainNavigation\n                onOpenMobileNav={this.mobileNavHandler.bind(this, true)}\n                onLogout={this.logoutHandler}\n                isAuth={this.state.isAuth}\n              />\n            </Toolbar>\n          }\n          mobileNav={\n            <MobileNavigation\n              open={this.state.showMobileNav}\n              mobile\n              onChooseItem={this.mobileNavHandler.bind(this, false)}\n              onLogout={this.logoutHandler}\n              isAuth={this.state.isAuth}\n            />\n          }\n        />\n        {routes}\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}